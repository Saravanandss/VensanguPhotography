{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/config.ts","webpack:///src/app/portfolio/portfolio.component.html","webpack:///src/app/portfolio/portfolio.component.ts","webpack:///src/app/services/portfolio.service.ts","webpack:///src/app/size.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","mailId","phone","selector","templateUrl","styleUrls","routes","path","redirectTo","pathMatch","component","data","type","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","withServerTransition","appId","declarations","providers","bootstrap","config","imageApiUrl","PortfolioComponent","route","portfolioService","initializeIndices","portraitIndex","landscapeIndex","calculateSizes","allowedSize","innerWidth","innerHeight","rowPortraitWidth","width","portraitSize","rowLandscapeWidth","rowLandscapeSize","colLandscapeWidth","colLandscapeSize","getPortraitBackground","portraitImageFiles","getLandscapeBackground","landscapeImageFiles","canRenderPortraitRow","length","canRenderColumns","canRenderLandscapeRow","loadImageFiles","getAllImages","images","console","log","portraits","landscapes","error","event","PortfolioService","http","get","toPromise","response","handleError","reject","message","Size","height","Width","Height","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.less']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n  public mailId = \"mailto:saravanandss@gmail.com?Subject=Appointment Inquiry\";\n  public phone = \"tel:1-860-920-2363\";\n\n  ngOnInit() {\n  }\n\n}","<div class=\"image-para\">\n    <img/>\n    <p>\n        At Vensangu Photography we love to celebrate our photography as art work. We hope we reflect our passion and love for photography in your pictures too.\n    </p>\n</div>\n\n<aside>\n    <fieldset class=\"contact-container\">\n        <legend>Contact us for any question</legend>\n        <fieldset class=\"contact-detail\">\n            <legend>Email</legend>\n            <a href=\"{{mailId}}\">saravanandss@gmail.com</a>\n        </fieldset>\n        <fieldset class=\"contact-detail\">\n            <legend>Phone</legend>\n            <a href=\"{{phone}}\">860-920-2363</a>\n        </fieldset>\n    </fieldset>    \n</aside>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PortfolioComponent } from './portfolio/portfolio.component';\nimport { AboutComponent } from './about/about.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    redirectTo: '/portfolio',\n    pathMatch: 'full'\n  },\n  {\n    path: 'portfolio',\n    component: PortfolioComponent,\n    data: {type: 'portfolio'}\n  },\n  {\n    path: 'portrait',\n    component: PortfolioComponent,\n    data: {type: 'portrait'}\n  },\n  {\n    path: 'family',\n    component: PortfolioComponent,\n    data: {type: 'family'}\n  },\n  {\n    path: 'party',\n    component: PortfolioComponent,\n    data: {type: 'party'}\n  },\n  {\n    path:'about',\n    component: AboutComponent\n  },\n  {\n    path: '**',\n    redirectTo: '/portfolio'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'Vensangu Photography';\n}\n","<div content>\n  <section class=\"header\">\n    <div class=\"align-center\">\n      <h1>\n        {{title}}\n      </h1>\n    </div>\n    <div class=\"align-right\">\n      <nav>\n        <a routerLink=\"/portfolio\" routerLinkActive=\"active\">Home</a>\n        <a routerLink=\"/portrait\" routerLinkActive=\"active\">Portrait</a>\n        <a routerLink=\"/family\" routerLinkActive=\"active\">Family</a>\n        <a routerLink=\"/party\" routerLinkActive=\"active\">Party</a>       \n        <a routerLink=\"/about\" routerLinkActive=\"active\">About</a>\n      </nav>\n    </div>\n  </section>\n  <section>\n    <router-outlet></router-outlet>\n  </section>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PortfolioComponent } from './portfolio/portfolio.component';\nimport { AboutComponent } from './about/about.component';\nimport { PortfolioService } from './services/portfolio.service';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PortfolioComponent,\n    AboutComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    HttpClientModule,\n    CommonModule  \n  ],\n  providers: [PortfolioService],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","export const config = {\n    // imageApiUrl: \"https://vensanguphotographyimageapi.azurewebsites.net\"\n    imageApiUrl: \"https://i4hfowkuwi.execute-api.us-east-2.amazonaws.com/Prod/images\"\n}\n","<ng-container *ngFor=\"let i of [1, 2, 3]\">\n    <div class=\"image-container\">\n        <ng-container *ngIf=\"canRenderPortraitRow()\">\n            <div class=\"block\">\n                <div class=\"image-row\">\n                    <div class=\"image-div picture-frame-row\" [style.width.px]=\"portraitSize.Width\" [style.height.px]=\"portraitSize.Height\" [ngStyle]=\"getPortraitBackground()\" ></div><!--\n                    --><div class=\"image-div picture-frame-row\" [style.width.px]=\"portraitSize.Width\" [style.height.px]=\"portraitSize.Height\" [ngStyle]=\"getPortraitBackground()\"></div><!--\n                    --><div class=\"image-div picture-frame-row\" [style.width.px]=\"portraitSize.Width\" [style.height.px]=\"portraitSize.Height\" [ngStyle]=\"getPortraitBackground()\"></div>\n                </div>\n            </div>\n        </ng-container><!--\n        --><ng-container *ngIf=\"canRenderColumns()\">\n            <div class=\"block\">\n                <div class=\"image-col\">\n                    <div class=\"image-div picture-frame-col\" [style.width.px]=\"colLandscapeSize.Width\" [style.height.px]=\"colLandscapeSize.Height\" [ngStyle]=\"getLandscapeBackground()\"></div>\n                    <div class=\"image-div picture-frame-col\" [style.width.px]=\"portraitSize.Width\" [style.height.px]=\"portraitSize.Height\" [ngStyle]=\"getPortraitBackground()\"></div>            \n                    <div class=\"image-div picture-frame-col\" [style.width.px]=\"colLandscapeSize.Width\" [style.height.px]=\"colLandscapeSize.Height\" [ngStyle]=\"getLandscapeBackground()\"></div>\n                </div><!--\n                --><div class=\"image-col\">\n                    <div class=\"image-div picture-frame-col\" [style.width.px]=\"portraitSize.Width\" [style.height.px]=\"portraitSize.Height\" [ngStyle]=\"getPortraitBackground()\"></div>           \n                    <div class=\"image-div picture-frame-col\" [style.width.px]=\"colLandscapeSize.Width\" [style.height.px]=\"colLandscapeSize.Height\" [ngStyle]=\"getLandscapeBackground()\"></div>\n                    <div class=\"image-div picture-frame-col\" [style.width.px]=\"colLandscapeSize.Width\" [style.height.px]=\"colLandscapeSize.Height\" [ngStyle]=\"getLandscapeBackground()\"></div>\n                </div><!--\n                --><div class=\"image-col\">\n                    <div class=\"image-div picture-frame-col\" [style.width.px]=\"colLandscapeSize.Width\" [style.height.px]=\"colLandscapeSize.Height\" [ngStyle]=\"getLandscapeBackground()\"></div>\n                    <div class=\"image-div picture-frame-col\" [style.width.px]=\"colLandscapeSize.Width\" [style.height.px]=\"colLandscapeSize.Height\" [ngStyle]=\"getLandscapeBackground()\"></div>\n                    <div class=\"image-div picture-frame-col\" [style.width.px]=\"portraitSize.Width\" [style.height.px]=\"portraitSize.Height\" [ngStyle]=\"getPortraitBackground()\"></div>        \n                </div>\n            </div>\n        </ng-container><!--\n        --><ng-container *ngIf=\"canRenderLandscapeRow()\">\n            <div class=\"block\">\n                <div class=\"image-row\">\n                    <div class=\"image-div picture-frame-row\" [style.width.px]=\"rowLandscapeSize.Width\" [style.height.px]=\"rowLandscapeSize.Height\" [ngStyle]=\"getLandscapeBackground()\"></div><!--\n                    --><div class=\"image-div picture-frame-row\" [style.width.px]=\"rowLandscapeSize.Width\" [style.height.px]=\"rowLandscapeSize.Height\" [ngStyle]=\"getLandscapeBackground()\"></div>\n                </div>\n            </div>\n        </ng-container>\n    </div>\n</ng-container>","import { Component, HostListener, OnInit, AfterViewInit, Inject } from '@angular/core';\nimport { ActivatedRoute, Route } from '@angular/router';\n\nimport { PortfolioService } from '../services/portfolio.service';\nimport { Size } from '../size';\nimport { config } from '../config';\n\n@Component({\n    templateUrl: './portfolio.component.html',\n    styleUrls:['./portfolio.component.less'],\n    providers: [PortfolioService]\n})\n\nexport class PortfolioComponent implements OnInit {\n    constructor(private route: ActivatedRoute, private portfolioService: PortfolioService){\n        this.loadImageFiles();\n    }\n\n    public portraitImageFiles: string[];\n    public landscapeImageFiles: string[];\n\n    public portraitSize: Size;\n    public rowLandscapeSize: Size;\n    public colLandscapeSize: Size;\n    private allowedSize: Size;\n\n    private imageApiUrl: string = config.imageApiUrl;\n\n    portraitIndex: number;\n    landscapeIndex: number;\n\n    ngOnInit(): void {\n        this.calculateSizes();\n        this.initializeIndices()\n    }\n    \n    @HostListener('window:resize', ['$event'])\n    onResize(event){\n        this.calculateSizes();\n        this.initializeIndices()\n    }\n\n    private initializeIndices = () => {\n        this.portraitIndex = 0;\n        this.landscapeIndex = 0;\n    }\n\n    private calculateSizes = () => {\n        this.allowedSize = new Size(innerWidth * 0.90, innerHeight)// 90% of available width;\n        \n        // Assuming 3:4 aspect ratio for the image.\n        let rowPortraitWidth = this.allowedSize.width / 3;\n        this.portraitSize = new Size(rowPortraitWidth, rowPortraitWidth / 3*4);\n        \n        let rowLandscapeWidth = this.allowedSize.width / 2;\n        this.rowLandscapeSize = new Size(rowLandscapeWidth, rowLandscapeWidth / 4*3);\n\n        let colLandscapeWidth = this.allowedSize.width / 3;\n        this.colLandscapeSize = new Size(colLandscapeWidth, colLandscapeWidth / 4*3);\n    }\n\n    public getPortraitBackground = () => {        \n         return {\n            'background-image' : 'url(' + this.imageApiUrl + '/' + this.portraitImageFiles[this.portraitIndex++] + ')'\n        };\n    }\n\n    public getLandscapeBackground = () => {\n        return {\n            'background-image' : 'url(' + this.imageApiUrl + '/' + this.landscapeImageFiles[this.landscapeIndex++] + ')'\n        };\n    }\n\n    //Following conditions were used in *ngIf in the template in the div.block. But kept giving error saying the expression has changed after being checked.\n    //Halting the idea till we figure out a solution.\n    public canRenderPortraitRow = () : boolean => {\n        return this.portraitImageFiles.length > (this.portraitIndex + 3);\n    }\n\n    public canRenderColumns = () : boolean => {\n        return this.portraitImageFiles.length > (this.portraitIndex + 3) && \n            this.landscapeImageFiles.length > (this.landscapeIndex + 6);\n    }\n\n    public canRenderLandscapeRow = (): boolean => {\n        return this.landscapeImageFiles.length > (this.landscapeIndex + 2);\n    }\n\n    private  loadImageFiles = async () => {\n        await this.portfolioService.getAllImages(this.route.data['value'].type)\n            .then(images => {\n                console.log('images', images);\n                this.portraitImageFiles = images.portraits;\n                this.landscapeImageFiles = images.landscapes;\n            })\n            .catch(error => console.log(error));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Images } from '../Images';\nimport { config } from '../config';\n\n@Injectable()\nexport class PortfolioService{\n    constructor(private http: HttpClient){        \n    }\n\n    private imageApiUrl: string = config.imageApiUrl;\n    \n    public getAllImages = (type: string) : Promise<Images> => {\n        console.log(type);\n        console.log(this.imageApiUrl + '/' + type);\n        return this.http.get(this.imageApiUrl + '/' + type)\n            .toPromise()\n            .then((response): Images => response as Images)\n            .catch(this.handleError);\n    }\n    \n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error);\n        return Promise.reject(error.message || error);\n      }\n}\n","export class Size{\n    constructor(public width: number, public height: number){\n        this.Width = width;\n        this.Height = height;\n    }\n    public Height: number;\n    public Width: number;\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}