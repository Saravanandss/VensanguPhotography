{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/config.ts","webpack:///src/app/portfolio/portfolio.component.html","webpack:///src/app/portfolio/portfolio.component.ts","webpack:///src/app/render/render.component.ts","webpack:///src/app/render/render.component.html","webpack:///src/app/services/portfolio.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","mailId","phone","selector","templateUrl","styleUrls","routes","path","redirectTo","pathMatch","component","data","type","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","withServerTransition","appId","declarations","providers","bootstrap","config","imageApiUrl","PortfolioComponent","route","portfolioService","loadImageFiles","getAllImages","images","allImages","portraits","map","im","Image","Orientation","portrait","landscapes","landscape","sort","totalHeight","length","breakImagesToColumns","error","console","log","averageHeight","Math","ceil","columns","columnHeight","index","imageChunks","imageIndex","image","height","orientation","swapWithNextLandscape","push","tempImage","landscapeIndex","slice","findIndex","event","RenderComponent","PortfolioService","http","get","toPromise","response","handleError","reject","message","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.less']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n  public mailId = \"mailto:saravanandss@gmail.com?Subject=Appointment Inquiry\";\n  public phone = \"tel:1-860-920-2363\";\n\n  ngOnInit() {\n  }\n\n}","<div class=\"image-para\">\n    <img/>\n    <p>\n        At Vensangu Photography we love to celebrate our photography as art work. We hope we reflect our passion and love for photography in your pictures too.\n    </p>\n</div>\n\n<aside>\n    <fieldset class=\"contact-container\">\n        <legend>Contact us for any question</legend>\n        <fieldset class=\"contact-detail\">\n            <legend>Email</legend>\n            <a href=\"{{mailId}}\">saravanandss@gmail.com</a>\n        </fieldset>\n        <fieldset class=\"contact-detail\">\n            <legend>Phone</legend>\n            <a href=\"{{phone}}\">860-920-2363</a>\n        </fieldset>\n    </fieldset>    \n</aside>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PortfolioComponent } from './portfolio/portfolio.component';\nimport { AboutComponent } from './about/about.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    redirectTo: '/portfolio',\n    pathMatch: 'full'\n  },\n  {\n    path: 'portfolio',\n    component: PortfolioComponent,\n    data: {type: 'portfolio'}\n  },\n  {\n    path: 'portrait',\n    component: PortfolioComponent,\n    data: {type: 'portrait'}\n  },\n  {\n    path: 'family',\n    component: PortfolioComponent,\n    data: {type: 'family'}\n  },\n  {\n    path: 'outdoor',\n    component: PortfolioComponent,\n    data: {type: 'outdoor'}\n  },\n  {\n    path:'about',\n    component: AboutComponent\n  },\n  {\n    path: '**',\n    redirectTo: '/portfolio'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'Vensangu Photography';\n}\n","<div content>\n  <section class=\"header\">\n    <div class=\"align-center\">\n      <h1>\n        {{title}}\n      </h1>\n    </div>\n    <div class=\"align-right\">\n      <nav>\n        <a routerLink=\"/portfolio\" routerLinkActive=\"active\">Home</a>\n        <a routerLink=\"/portrait\" routerLinkActive=\"active\">Portrait</a>\n        <a routerLink=\"/family\" routerLinkActive=\"active\">Family</a>\n        <a routerLink=\"/outdoor\" routerLinkActive=\"active\">Outdoor</a>       \n        <a routerLink=\"/about\" routerLinkActive=\"active\">About</a>\n      </nav>\n    </div>\n  </section>\n  <section>\n    <router-outlet></router-outlet>\n  </section>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PortfolioComponent } from './portfolio/portfolio.component';\nimport { AboutComponent } from './about/about.component';\nimport { PortfolioService } from './services/portfolio.service';\nimport { CommonModule } from '@angular/common';\nimport { RenderComponent } from './render/render.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PortfolioComponent,\n    AboutComponent,\n    RenderComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    HttpClientModule,\n    CommonModule  \n  ],\n  providers: [PortfolioService],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","export const config = {\n    // imageApiUrl: \"https://vensanguphotographyimageapi.azurewebsites.net\"\n    imageApiUrl: \"https://won2alg3mh.execute-api.us-east-2.amazonaws.com/Prod/api/Images\"\n}\n","<div class=\"grid\">\n    <ng-container *ngFor=\"let images of imageChunks\">\n        <div class=\"image-container\">\n            <ng-container *ngFor=\"let image of images\">\n                <app-render imagePath=\"{{image.path}}\"></app-render>\n            </ng-container>\n        </div>\n    </ng-container>\n</div>","import { Component, HostListener, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PortfolioService } from '../services/portfolio.service';\nimport { Binary } from '@angular/compiler';\n\n@Component({\n    templateUrl: './portfolio.component.html',\n    styleUrls: ['./portfolio.component.less'],\n    providers: [PortfolioService]\n})\n\nexport class PortfolioComponent implements OnInit {\n    constructor(private route: ActivatedRoute, private portfolioService: PortfolioService) {\n        this.loadImageFiles();\n        this.columns = 3;\n    }\n\n    public allImages: Image[];\n    public imageChunks: Image[][];\n    public columns: number;\n    public totalHeight: number;\n\n    ngOnInit(): void {\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        //Change number of columns based on the screen width\n    }\n\n    loadImageFiles = async () => {\n        await this.portfolioService.getAllImages(this.route.data['value'].type)\n            .then(images => {\n                this.allImages = [...images.portraits.map(im => new Image(im, Orientation.portrait)),\n                ...images.landscapes.map(im => new Image(im, Orientation.landscape))].sort();\n\n                //Take the weighted total\n                this.totalHeight = images.landscapes.length * 2 + images.portraits.length * 4.5;\n                this.breakImagesToColumns();\n            })\n            .catch(error => console.log(error));\n    }\n\n    breakImagesToColumns = () => {\n        const averageHeight = Math.ceil(this.totalHeight / this.columns);\n        let columnHeight = 0;\n        let index = 0;\n        this.imageChunks = [];\n\n        for (let imageIndex = 0; imageIndex < this.allImages.length; imageIndex++) {\n            let image = this.allImages[imageIndex];\n            if (columnHeight + image.height > averageHeight &&\n                image.orientation == Orientation.portrait) {\n                this.swapWithNextLandscape(imageIndex);\n\n                image = this.allImages[imageIndex];\n            }\n\n            if (columnHeight + image.height > averageHeight) {\n                index++;\n                columnHeight = image.height;\n            }\n            else\n                columnHeight += image.height;\n\n            if (this.imageChunks.length <= index)\n                this.imageChunks.push([]);\n\n            this.imageChunks[index].push(image);\n        }\n    }\n\n    swapWithNextLandscape = (imageIndex: number) => {\n        let tempImage = this.allImages[imageIndex];\n        let landscapeIndex = this.allImages.slice(imageIndex, this.allImages.length - 1)\n            .findIndex(im => im.orientation === Orientation.landscape);\n        if (landscapeIndex >= 0) {\n            landscapeIndex += imageIndex; //compensating the slice we did before.\n            this.allImages[imageIndex] = this.allImages[landscapeIndex];\n            this.allImages[landscapeIndex] = tempImage;\n        }\n    }\n}\n\nconst Orientation = { \"landscape\": 0, \"portrait\": 1 };\n\nexport class Image {\n    constructor(path: string, orientation: number) {\n        this.path = path;\n        this.orientation = orientation;\n        // For 3:2 image, if height of landscape is 2, height of portrait: 1.5 * 3 = 4.5\n        this.height = orientation === Orientation.landscape ? 2 : 4.5;\n    }\n    public path: string;\n    public orientation: number;\n    public height: number;\n}","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-render',\n  templateUrl: './render.component.html',\n  styleUrls: ['./render.component.less']\n})\nexport class RenderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  @Input() imagePath: string;\n\n}","<img src=\"{{imagePath}}\" />\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Images } from '../Images';\nimport { config } from '../config';\n\n@Injectable()\nexport class PortfolioService{\n    constructor(private http: HttpClient){        \n    }\n\n    private imageApiUrl: string = config.imageApiUrl;\n    \n    public getAllImages = (type: string) : Promise<Images> => {\n        console.log(type);\n        console.log(this.imageApiUrl + '/' + type);\n        return this.http.get(this.imageApiUrl + '/' + type)\n            .toPromise()\n            .then((response): Images => response as Images)\n            .catch(this.handleError);\n    }\n    \n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error);\n        return Promise.reject(error.message || error);\n      }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}